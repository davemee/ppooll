outlets = 2;sketch.fsaa = 0;sketch.default2d();var mybrgb;var myfrgb = [0.,0.,0.];var mytexton = "on";var mytextoff = "off";var myfontsize = 0.5; var myfont = "Sans Serif"; var myval = 0;var mybrgb0 = [0.7,0.7,0.7];var mybrgb1 = [0.9,0.,0.];var myfrgb0 = [0.7,0.7,0.7];var myfrgb1 = [0.9,0.,0.];var mybevel = 0.25;var mysmooth = 0;var myshade = 0.2;var tm = 0;// process argumentsif (jsarguments.length>1)	mytextoff = jsarguments[1];if (jsarguments.length>2)	mytexton = jsarguments[2];if (jsarguments.length>3)	{	myfrgb0 = jsarguments[3].split(" ");	myfrgb0[0] = myfrgb0[0]/255;	myfrgb0[1] = myfrgb0[1]/255;	myfrgb0[2] = myfrgb0[2]/255;	}if (jsarguments.length>4)	{	myfrgb1 = jsarguments[4].split(" ");	myfrgb1[0] = myfrgb1[0]/255;	myfrgb1[1] = myfrgb1[1]/255;	myfrgb1[2] = myfrgb1[2]/255;	}if (jsarguments.length>5)	{	mybrgb0 = jsarguments[5].split(" ");	mybrgb0[0] = mybrgb0[0]/255;	mybrgb0[1] = mybrgb0[1]/255;	mybrgb0[2] = mybrgb0[2]/255;	}if (jsarguments.length>6)	{	mybrgb1 = jsarguments[6].split(" ");	mybrgb1[0] = mybrgb1[0]/255;	mybrgb1[1] = mybrgb1[1]/255;	mybrgb1[2] = mybrgb1[2]/255;	}if (jsarguments.length>7)	tm = jsarguments[7];if (jsarguments.length>8)	myfontsize = jsarguments[8];if (jsarguments.length>9)	myfont = jsarguments[9];mybrgb = mybrgb0;myfrgb = myfrgb0;draw();refresh();function draw(){	var str,width,height,aspect,down;	var bglo = new Array();	var bglo2 = new Array();	var bghi = new Array();	var bghi2 = new Array();	var bg1,bg2,bg3,bg4;	height = box.rect[3] - box.rect[1]; 	width = box.rect[2] - box.rect[0]; 	aspect = width/height;		if (mysmooth)		sh = myshade * 2;	else		sh = myshade;			bglo[0] = mybrgb[0] * (1-sh);	bglo[1] = mybrgb[1] * (1-sh);	bglo[2] = mybrgb[2] * (1-sh);	bglo2[0] = mybrgb[0] * (1-sh/2);	bglo2[1] = mybrgb[1] * (1-sh/2);	bglo2[2] = mybrgb[2] * (1-sh/2);	bghi[0] = mybrgb[0] * (1+sh);	bghi[1] = mybrgb[1] * (1+sh);	bghi[2] = mybrgb[2] * (1+sh);	bghi2[0] = mybrgb[0] * (1+sh/2);	bghi2[1] = mybrgb[1] * (1+sh/2);	bghi2[2] = mybrgb[2] * (1+sh/2);	bg0 = mybrgb;	if (myval) {		bg1 = bglo;		bg2 = bglo2;		bg3 = bghi;		bg4 = bghi2;	} else {		bg1 = bghi;		bg2 = bghi2;		bg3 = bglo;		bg4 = bglo2;	}	with (sketch) {		//erase background		glclearcolor(bg0);		glclear();		if (mysmooth)		{		// left/top		glbegin("tri_strip");			glcolor(bg2);			glvertex(-aspect,-1);			glcolor(bg0);			glvertex(-aspect+mybevel,-1+mybevel);			glcolor(bg1);			glvertex(-aspect,1);			glcolor(bg0);			glvertex(-aspect+mybevel,1-mybevel);			glcolor(bg2);			glvertex(aspect,1);			glcolor(bg0);			glvertex(aspect-mybevel,1-mybevel);		glend();		// bottom/right		glbegin("tri_strip");			glcolor(bg4);			glvertex(aspect,1);			glcolor(bg0);			glvertex(aspect-mybevel,1-mybevel);			glcolor(bg3);			glvertex(aspect,-1);			glcolor(bg0);			glvertex(aspect-mybevel,-1+mybevel);			glcolor(bg4);			glvertex(-aspect,-1);			glcolor(bg0);			glvertex(-aspect+mybevel,-1+mybevel);		glend();		} 		else 		{		// left tapezoid		glbegin("tri_strip");			glcolor(bg2);			glvertex(-aspect,-1);			glvertex(-aspect+mybevel,-1+mybevel);			glvertex(-aspect,1);			glvertex(-aspect+mybevel,1-mybevel);		glend();		// top tapezoid		glbegin("tri_strip");			glcolor(bg1);			glvertex(-aspect,1);			glvertex(-aspect+mybevel,1-mybevel);			glvertex(aspect,1);			glvertex(aspect-mybevel,1-mybevel);		glend();		// right tapezoid		glbegin("tri_strip");			glcolor(bg4);			glvertex(aspect,1);			glvertex(aspect-mybevel,1-mybevel);			glvertex(aspect,-1);			glvertex(aspect-mybevel,-1+mybevel);		glend();		// bottom tapezoid		glbegin("tri_strip");			glcolor(bg3);			glvertex(aspect,-1);			glvertex(aspect-mybevel,-1+mybevel);			glvertex(-aspect,-1);			glvertex(-aspect+mybevel,-1+mybevel);		glend();		}		glcolor(myfrgb);				if (down)			moveto(0.02*aspect,-0.02 );		else			moveto(0,0);		font(myfont);		fontsize(myfontsize*height);		textalign("center","center");				if (myval)			text(mytexton);		else 			text(mytextoff);	}}function setvalueof(v){	msg_int(v);}function getvalueof(){	return myval;}function texton(v){	mytexton = v.toString();	draw();	refresh();}function textoff(v){	mytextoff = v.toString();	draw();	refresh();}function fontsize(v){	myfontsize = v;	draw();	refresh();}function font(v){	myfont = v;	draw();	refresh();}function frgb0(r,g,b){	myfrgb0[0] = r/255.;	myfrgb0[1] = g/255.;	myfrgb0[2] = b/255.;	draw();	refresh();}function frgb1(r,g,b){	myfrgb1[0] = r/255.;	myfrgb1[1] = g/255.;	myfrgb1[2] = b/255.;	draw();	refresh();}function brgb0(r,g,b){	mybrgb0[0] = r/255.;	mybrgb0[1] = g/255.;	mybrgb0[2] = b/255.;	draw();	refresh();}function brgb1(r,g,b){	mybrgb1[0] = r/255.;	mybrgb1[1] = g/255.;	mybrgb1[2] = b/255.;	draw();	refresh();}function fsaa(v){	sketch.fsaa = v;	draw();	refresh();}function onresize(w,h){	draw();	refresh();}onresize.local = 1; //privatefunction msg_int(v){	if (v==0)	{		myval = 0;		mybrgb = mybrgb0;		myfrgb = myfrgb0;	}	else	{		myval = 1;		mybrgb = mybrgb1;		myfrgb = myfrgb1;	}	draw();	refresh();	if (myval)		outlet(1,mytextoff);	else		outlet(1,mytexton);		outlet(0,myval);	notifyclients();	}function bang(){	myval = 1 - myval; // toggle 0/1	msg_int(myval);}// not using any mouse argsfunction onclick(){	if (tm)	{	myval = 1;	outlet(0,myval);	notifyclients();	mybrgb = mybrgb1;	myfrgb = myfrgb1;	draw();	refresh();	myval = 0;	outlet(0,myval);	notifyclients();	mybrgb = mybrgb0;	myfrgb = myfrgb0;	draw();	refresh();	}	else	bang();}onclick.local = 1; //privatefunction ondblclick(){	onclick();}ondblclick.local = 1; //private//function ondrag(x,y,but)//{//if (!but && tm==1) {//			bang();//			}//}//function onidle()//{//if (tm && myval) bang();//}function togglemode(a){tm = a;}function set(v){	if (v==0)	{		myval = 0;		mybrgb = mybrgb0;		myfrgb = myfrgb0;	}	else	{		myval = 1;		mybrgb = mybrgb1;		myfrgb = myfrgb1;	}	draw();	refresh();}