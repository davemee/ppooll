{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 7,
			"minor" : 3,
			"revision" : 3,
			"architecture" : "x86",
			"modernui" : 1
		}
,
		"rect" : [ 205.0, 78.0, 1285.0, 911.0 ],
		"editing_bgcolor" : [ 0.9, 0.9, 0.9, 1.0 ],
		"bglocked" : 0,
		"openinpresentation" : 0,
		"default_fontsize" : 12.0,
		"default_fontface" : 0,
		"default_fontname" : "Arial",
		"gridonopen" : 1,
		"gridsize" : [ 15.0, 15.0 ],
		"gridsnaponopen" : 1,
		"objectsnaponopen" : 1,
		"statusbarvisible" : 2,
		"toolbarvisible" : 1,
		"lefttoolbarpinned" : 0,
		"toptoolbarpinned" : 0,
		"righttoolbarpinned" : 0,
		"bottomtoolbarpinned" : 0,
		"toolbars_unpinned_last_save" : 0,
		"tallnewobj" : 0,
		"boxanimatetime" : 200,
		"enablehscroll" : 1,
		"enablevscroll" : 1,
		"devicewidth" : 0.0,
		"description" : "",
		"digest" : "",
		"tags" : "",
		"style" : "",
		"subpatcher_template" : "",
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-8",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 1170.0, 834.0, 37.0, 22.0 ],
					"style" : "",
					"text" : "out 3"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-7",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 635.5, 834.0, 37.0, 22.0 ],
					"style" : "",
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-6",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 1170.0, 14.0, 30.0, 22.0 ],
					"style" : "",
					"text" : "in 4"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-5",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 813.666687, 14.0, 30.0, 22.0 ],
					"style" : "",
					"text" : "in 3"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 101.0, 14.0, 30.0, 22.0 ],
					"style" : "",
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 457.333344, 14.0, 30.0, 22.0 ],
					"style" : "",
					"text" : "in 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "// op@ v3.03\r\n// 16.7.2017 by clemens hausch with portions of code by Nathan Harmer\r\n// clemens.hausch@moozak.org\r\n\r\ncalc(mode, a, b) {\r\n\tresult = 0;\r\n\r\n\tif (mode == 0) {\r\n\t\tresult = 0;\r\n\t}\telse if (mode == 1) {\r\n\t\tresult = a;\r\n\t}\telse if (mode == 2) {\r\n\t\tresult = b;\r\n\t} \telse if (mode == 3) {\r\n\t\tresult = a + b;\r\n\t} \telse if (mode == 4) {\r\n\t\tresult = a - b;\r\n\t}\telse if (mode == 5) {\r\n\t\tresult = a * b;\r\n\t}\telse if (mode == 6) {\r\n\t\tresult = a / b;\r\n\t}\telse if (mode == 7) {\r\n\t\tresult = a % b;\r\n\t}\telse if (mode == 8) {\r\n\t\tresult = absdiff(a, b);\r\n\t}\telse if (mode == 9) {\r\n\t\tresult = minimum(a, b);\r\n\t}\telse if (mode == 10) {\r\n\t\tresult = maximum(a, b);\r\n\t}\telse if (mode == 11) {\r\n\t\tresult = (a+b)/2;\r\n\t}\telse if (mode == 12) {\r\n\t\tresult = and(a, b);\r\n\t}\telse if (mode == 13) {\r\n\t\tresult = or(a, b);\r\n\t}\telse if (mode == 14) {\r\n\t\tresult = xor(a, b);\r\n\t}\telse if (mode == 15) {\r\n\t\tresult = not(a, b);\r\n\t}\telse if (mode == 16) {\r\n\t\tresult = a == b;\r\n\t}\telse if (mode == 17) {\r\n\t\tresult = a ==p b;\r\n\t}\telse if (mode == 18) {\r\n\t\tresult = a > b;\r\n\t}\telse if (mode == 19) {\r\n\t\tresult = a >= b;\r\n\t}\telse if (mode == 20) {\r\n\t\tresult = a >p b;\r\n\t}\telse if (mode == 21) {\r\n\t\tresult = a >=p b;\r\n\t}\telse if (mode == 22) {\r\n\t\tresult = a < b;\r\n\t}\telse if (mode == 23) {\r\n\t\tresult = a <= b;\r\n\t}\telse if (mode == 24) {\r\n\t\tresult = a <p b;\r\n\t}\telse if (mode == 25) {\r\n\t\tresult = a <=p b;\r\n\t}\r\n\treturn result;\r\n\t\r\n}\r\n\r\nscaleval(value, scaleInMin, scaleInMax, scaleOutMin, scaleOutMax, scaleExpVal, scaleSym, pRamp) {\n\tresult = 0;\r\n\tscaleInMin = line(scaleInMin, pRamp);\r\n\tscaleInMax = line(scaleInMax, pRamp);\r\n\tscaleOutMin = line(scaleOutMin, pRamp);\r\n\tscaleOutMax = line(scaleOutMax, pRamp);\r\n\tscaleExpVal = line(scaleExpVal, pRamp);\n\tif (scaleSym == 0) {\n\t\tresult = scale(value, scaleInMin, scaleInMax, scaleOutMin, scaleOutMax, scaleExpVal);\n\t} else if (scaleSym == 1) {\n\t\tinMid = scaleInMax - scaleInMin;\n \t\toutMid = scaleOutMax - scaleOutMin;\n\t\tif (value > 0) {\n\t\t\tresult = scale(value, inMid, scaleInMax, outMid, scaleOutMax, scaleExpVal);\n\t\t} else if (value < 0) {\n\t\t\tresult = -1 * scale(abs(value), inMid, abs(scaleInMin), outMid, abs(scaleOutMin), scaleExpVal);\n\t\t} else {\n\t\t\tresult = 0;\n\t\t}\n\t} else if (scaleSym == 2) {\n\t\tinMid = ((scaleInMax - scaleInMin)/2) + scaleInMin;\n \t\toutMid = ((scaleOutMax - scaleOutMin)/2) + scaleOutMin;\n\t\tif (value > inMid) {\n\t\t\tresult = scale(value, inMid, scaleInMax, outMid, scaleOutMax, scaleExpVal);\n\t\t} else if (value < inMid) {\n\t\t\tresult = -1 * scale(abs(value), inMid, abs(scaleInMin), outMid, abs(scaleOutMin), scaleExpVal);\n\t\t} else if (value == inMid) {\n\t\t\tresult = outMid;\n\t\t}\n\t}\n\treturn result;\n}\r\n\r\nclipval(value, clipMin, clipMax, clipMode, pRamp) {\r\n\tresult = 0;\r\n\tclipMin = line(clipMin, pRamp);\r\n\tclipMax = line(clipMax, pRamp);\r\n\tif (clipMode == 1) {\r\n\t\tresult = clip(value, clipMin, clipMax);\r\n\t} else if (clipMode == 2) {\r\n\t\tresult = wrap(value, clipMin, clipMax);\r\n\t} else if (clipMode == 3) {\r\n\t\tresult = fold(value, clipMin, clipMax);\r\n\t} else if (clipMode == 4) {\r\n\t\tpreClipScale = scale(value, -1, 1, 1/clipMin, 1/clipMax, 1);\n\t\tresult = scale(tanh(preClipScale), -1, 1, clipMin, clipMax, 1);\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nsmoothval(val, smoothUp, smoothDown, pRamp) {\r\n\t// NH.rampSmoothSlide by Nathan Harmer\r\n\t// https://cycling74.com/toolbox/gen-nh-rampsmooth-slide/\r\n\tHistory x(0);\n\tsmoothUp = line(smoothUp, pRamp);\r\n\tsmoothDown = line(smoothDown, pRamp);\r\n\tgt_1 = val > x;\n\tsub_2 = val - x;\n\tabs_3 = abs(sub_2);\n\tadd_4 = smoothUp + 1;\n\trdiv_5 = 1 / add_4;\n\tmin_6 = min(abs_3, rdiv_5);\n\tabs_7 = abs(sub_2);\n\tadd_8 = smoothDown + 1;\n\trdiv_9 = 1 / add_8;\n\tmin_10 = min(abs_7, rdiv_9);\n\trsub_11 = 0 - min_10;\n\tswitch_12 = gt_1 ? min_6 : rsub_11;\n\tadd_13 = x + switch_12;\n\tfixdenorm_14 = fixdenorm(add_13);\n\tx_next_15 = fixdenorm(fixdenorm_14);\n\tx = x_next_15;\r\n\treturn fixdenorm_14;\n}\r\n\r\ninput(leftSig, rightSig, leftNum, rightNum, leftMode, rightMode, dcBlockPreA, dcBlockPreB, lAbsPlus, lAbsMinus, rAbsPlus, rAbsMinus) {\r\n\t\r\n\tleft = leftMode ? leftNum : (dcBlockPreA ? dcblock(leftSig) : leftSig);\n\tright = rightMode ? rightNum : (dcBlockPreB ? dcblock(rightSig) : rightSig);\r\n\r\n\tif (lAbsPlus == 0 && lAbsMinus == 0) {\r\n\t\tleft = left;\r\n\t} else if (lAbsPlus == 1) {\r\n\t\tleft = abs(left);\r\n\t} else if (lAbsMinus == 1) {\r\n\t\tleft = -abs(left);\r\n\t}\r\n\tif (rAbsPlus == 0 && rAbsMinus == 0) {\r\n\t\tright = right;\r\n\t} else if (rAbsPlus == 1) {\r\n\t\tright = abs(right);\r\n\t} else if (rAbsMinus == 1) {\r\n\t\tright = -abs(right);\r\n\t}\r\n\treturn left, right;\r\n}\r\n\r\nline(value, pRamp) {\r\n\t// found here: https://cycling74.com/forums/topic/translate-msp-line-into-gen-counter/\r\n\tHistory history_1(0);\n\tchange_2 = change(value);\n\tneq_3 = change_2 != 0;\n\tlatch_4 = latch(value, neq_3);\n\tlatch_5 = latch(history_1, neq_3);\n\tint_6 = int(1);\t\n\tplusequals_7 = plusequals(int_6, neq_3);\n\tmstosamps_8 = mstosamps(pRamp);\n\tlatch_9 = latch(mstosamps_8, neq_3);\n\tdiv_10 = plusequals_7 / latch_9;\n\tclamp_11 = clamp(div_10, 0, 1);\n\tmix_12 = mix(latch_5, latch_4, clamp_11);\n\thistory_1_next_13 = fixdenorm(latch_4);\n\thistory_1 = history_1_next_13;\r\n\treturn mix_12;\n}\r\n\r\nParam op(0);\r\nParam leftMode(0);\nParam rightMode(0);\nParam switchOps(0);\r\nParam dcBlockPreA(0);\r\nParam dcBlockPreB(0);\r\nParam dcBlockPostOp(0);\r\nParam dcBlockPostScale(0);\r\nParam scaleMode(0);\r\nParam scaleInMin(-1);\r\nParam scaleInMax(1);\r\nParam scaleOutMin(-1);\r\nParam scaleOutMax(1);\r\nParam scaleExpVal(1);\r\nParam scaleSym(0);\nParam clipMode(0);\r\nParam clipMin(-1);\r\nParam clipMax(1);\r\nParam smoothMode(0);\r\nParam smoothUp(0);\r\nParam smoothDown(0);\r\nParam lAbsPlus(0);\r\nParam lAbsMinus(0);\r\nParam rAbsPlus(0);\r\nParam rAbsMinus(0);\r\nParam pRamp(10);\r\n\r\nleft, right = input(in1, in2, in3, in4, leftMode, rightMode, dcBlockPreA, dcBlockPreB, lAbsPlus, lAbsMinus, rAbsPlus, rAbsMinus);\r\n\na = switchOps ? right : left;\nb = switchOps ? left : right;\r\n\r\nresult = calc(op, a, b);\r\nresultDcBlocked = dcBlockPostOp ? dcblock(result) : result;\r\nresultScaled = scaleMode ? scaleval(resultDcBlocked, scaleInMin, scaleInMax, scaleOutMin, scaleOutMax, scaleExpVal, scaleSym, pRamp) : resultDcBlocked;\r\nresultDcBlockedScaled = dcBlockPostScale ? dcblock(resultScaled) : resultScaled;\r\nresultClipped = clipMode ? clipval(resultDcBlockedScaled, clipMin, clipMax, clipMode, pRamp) : resultDcBlockedScaled;\r\nresultSmoothed = smoothMode ? smoothval(resultClipped, smoothUp, smoothDown, pRamp) : resultClipped;\r\n\r\nout1 = resultSmoothed;\r\nout2 = leftMode ? 0 : left;\r\nout3 = rightMode ? 0 : right;",
					"fontface" : 0,
					"fontname" : "Arial",
					"fontsize" : 12.0,
					"id" : "obj-3",
					"maxclass" : "codebox",
					"numinlets" : 4,
					"numoutlets" : 3,
					"outlettype" : [ "", "", "" ],
					"patching_rect" : [ 101.0, 60.0, 1088.0, 750.0 ],
					"style" : ""
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 101.0, 834.0, 37.0, 22.0 ],
					"style" : "",
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 0 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 1 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-3", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-3", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-8", 0 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-3", 2 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 2 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-5", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 3 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-6", 0 ]
				}

			}
 ]
	}

}
